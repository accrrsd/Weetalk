import React, { useEffect, useState } from 'react'
import CardWrapper from '../../components/card-wrapper/card-wrapper'
import photo from '../../images/test-photo-1.png'
import photo2 from '../../images/test-photo-2.png'
import emptyPhoto from '../../images/fav-test.png'
import style from '../../components/card-wrapper/card-wrapper.module.css'
import Card from '../../components/card/card'
import { TipModal } from '../../components/tip-modal/tip-modal'
import { TTipPopupOffset } from '../../utils/types'

import favoritesStyle from './favorites.module.css'

function Favorites() {
  const [heartCords, setHeartCords] = useState<TTipPopupOffset | null>(null)
  const tipMessage = '–ò–≤–∞–Ω, —Ç—ã –ø–æ–∫–∞ –µ—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ üòî \n –≠—Ç–æ –ª–µ–≥–∫–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∏–∫–æ–Ω–∫—É'

  const TipOffset = {
    left: 10,
    top: 10,
  } as TTipPopupOffset

  useEffect(() => {
    const HeartElem = document.querySelector('.card_heart__zgeMe') as HTMLButtonElement
    if (HeartElem) {
      // const top = HeartElem.offsetTop
      // const left = HeartElem.offsetLeft
      const { top, left } = HeartElem.getBoundingClientRect()
      setHeartCords({ top, left })
    }
  }, [])

  const cards: any = [
    /*    {
      title: '–ò–≤–∞–Ω –ö–æ–≤–∞–ª–µ–≤',
      about: 'Backend-Developer',
      photo,
      isLiked: true,
      text: '"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo invento perspiciatis unde omnis iste ',
    },
    {
      title: '–ê–Ω–Ω–∞ –ú–∞–∫–∞—Ä–æ–≤–∞',
      about: '–ú–µ–Ω–µ–¥–∂–µ—Ä',
      photo: photo2,
      isLiked: true,
      text: '"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo invento perspiciatis unde omnis iste ',
    },
    {
      title: '–ê–Ω–Ω–∞ –ú–∞–∫–∞—Ä–æ–≤–∞',
      about: '–ú–µ–Ω–µ–¥–∂–µ—Ä',
      photo: photo2,
      isLiked: true,
      text: '"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo invento perspiciatis unde omnis iste ',
    },
    {
      title: '–ò–≤–∞–Ω –ö–æ–≤–∞–ª–µ–≤',
      about: 'Backend-Developer',
      photo,
      isLiked: true,
      text: '"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo invento perspiciatis unde omnis iste ',
    },*/
  ]
  return cards.length === 0 ? (
    <div className={style.wrapper}>
      <div className={style.heading} style={{ marginBottom: 100 }}>
        <h1 className={style.title}>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h1>
        <button className={style.button + ' ' + style.buttonOneColumn}></button>
      </div>
      <Card
        title="–ï–≤–≥–µ–Ω–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤"
        about="–î–∏–∑–∞–π–Ω–µ—Ä –≤ Gradient"
        photo={emptyPhoto}
        isLiked={false}
        text="–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω–µ—Ä, –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã 8 –ª–µ—Ç. –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∫–æ–º—å—é–Ω–∏—Ç–∏ ‚Äú–ö–æ–Ω—Ç—Ä–∞—Å—Ç‚Äù. –ó–∞–Ω–∏–º–∞—é—Å—å –π–æ–≥–æ–π, –ª—é–±–ª—é –æ—Ç–¥—ã—Ö–∞—Ç—å –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ. –ë—É–¥—É —Ä–∞–¥ –æ–±–º–µ–Ω—è—Ç—å—Å—è –æ–ø—ã—Ç–æ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!"
        card={{}}
        onCardClick={() => {}}
      />
      {heartCords && <TipModal message={tipMessage} offset={heartCords} onClick={() => {}} overlayAdditionStyle={favoritesStyle.TipAdditionStyle} />}
    </div>
  ) : (
    <CardWrapper title="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" array={cards} />
  )
}

export default Favorites
