import React, { useEffect, useRef, useState } from 'react'
import CardWrapper from '../../components/card-wrapper/card-wrapper'
import wrapperStyle from '../../components/card-wrapper/card-wrapper.module.css'
import style from './favorites.module.css'
import Card from '../../components/card/card'
import { TitleSmart } from '../../components/title-smart/title-smart'
import { getUserFavorites } from '../../utils/api'
import favImg from '../../images/heartLiked.svg'

function Favorites() {
  const [favorites, setFavorites] = useState([])
  const [isFavoritesLoaded, setIsFavoritesLoaded] = useState(false)
  const cardWrapperRef = useRef<HTMLDivElement>(null)
  const isFirstRender = useRef(true)

  useEffect(() => {
    getUserFavorites(String(localStorage.getItem('ownerId')))
      .then(card => setFavorites(card))
      .catch(error => console.log(`Error: ${error}`))
  }, [])

  useEffect(() => {
    const loadImage = (card: any) => {
      return new Promise((resolve, reject) => {
        const loadImg = new Image()
        loadImg.src = `http://weetalk.online/img/${card.image}`
        loadImg.onload = () => resolve(card)
        loadImg.onerror = err => reject(err)
      })
    }
    // –ò–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞
    if (isFirstRender.current) {
      isFirstRender.current = false
      return
    }

    Promise.all(favorites.map(image => loadImage(image)))
      .then(() => setIsFavoritesLoaded(true))
      .catch(err => console.log('Failed to load images', err))
  }, [favorites])

  return isFavoritesLoaded && favorites.length === 0 ? (
    <div className={wrapperStyle.wrapper}>
      <TitleSmart
        text="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
        haveButton={true}
        buttonStyle={wrapperStyle.button + ' ' + wrapperStyle.buttonOneColumn}
        textStyle={wrapperStyle.title}
        wrapperStyle={wrapperStyle.heading}
      />
      <div className={wrapperStyle.cardWrapper} ref={cardWrapperRef}>
        <Card
          username="–ù–∏–∫–∏—Ç–∫–∞"
          actualJob="–∏–≤–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä"
          image={''}
          isLiked={true}
          description="–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω–µ—Ä, –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã 8 –ª–µ—Ç. –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∫–æ–º—å—é–Ω–∏—Ç–∏ ‚Äú–ö–æ–Ω—Ç—Ä–∞—Å—Ç‚Äù. –ó–∞–Ω–∏–º–∞—é—Å—å –π–æ–≥–æ–π, –ª—é–±–ª—é –æ—Ç–¥—ã—Ö–∞—Ç—å –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ. –ë—É–¥—É —Ä–∞–¥ –æ–±–º–µ–Ω—è—Ç—å—Å—è –æ–ø—ã—Ç–æ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!"
        />
        <div className={style.tip}>
          –ò–≤–∞–Ω, —Ç—ã –ø–æ–∫–∞ –µ—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ üòî <br />
          –≠—Ç–æ –ª–µ–≥–∫–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∏–∫–æ–Ω–∫—É{' '}
          <img className={style.img} src={favImg} alt="–õ–∞–π–∫" />
        </div>
      </div>
    </div>
  ) : (
    <CardWrapper
      title="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
      array={favorites}
      favorites={favorites}
      setFavorites={setFavorites}
      isFavoritesLoaded={isFavoritesLoaded}
    />
  )
}

export default Favorites
